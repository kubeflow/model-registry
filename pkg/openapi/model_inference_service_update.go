/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: v1alpha2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InferenceServiceUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InferenceServiceUpdate{}

// InferenceServiceUpdate An `InferenceService` entity in a `ServingEnvironment` represents a deployed `ModelVersion` from a `RegisteredModel` created by Model Serving.
type InferenceServiceUpdate struct {
	// User provided custom properties which are not defined by its type.
	CustomProperties *map[string]MetadataValue `json:"customProperties,omitempty"`
	// An optional description about the resource.
	Description *string `json:"description,omitempty"`
	// The external id that come from the clientsâ€™ system. This field is optional. If set, it must be unique among all resources within a database instance.
	ExternalID *string `json:"externalID,omitempty"`
	// ID of the `ModelVersion` to serve. If it's unspecified, then the latest `ModelVersion` by creation order will be served.
	ModelVersionId *string `json:"modelVersionId,omitempty"`
	// Model runtime.
	Runtime      *string                `json:"runtime,omitempty"`
	DesiredState *InferenceServiceState `json:"desiredState,omitempty"`
}

// NewInferenceServiceUpdate instantiates a new InferenceServiceUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInferenceServiceUpdate() *InferenceServiceUpdate {
	this := InferenceServiceUpdate{}
	var desiredState InferenceServiceState = INFERENCESERVICESTATE_DEPLOYED
	this.DesiredState = &desiredState
	return &this
}

// NewInferenceServiceUpdateWithDefaults instantiates a new InferenceServiceUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInferenceServiceUpdateWithDefaults() *InferenceServiceUpdate {
	this := InferenceServiceUpdate{}
	var desiredState InferenceServiceState = INFERENCESERVICESTATE_DEPLOYED
	this.DesiredState = &desiredState
	return &this
}

// GetCustomProperties returns the CustomProperties field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetCustomProperties() map[string]MetadataValue {
	if o == nil || IsNil(o.CustomProperties) {
		var ret map[string]MetadataValue
		return ret
	}
	return *o.CustomProperties
}

// GetCustomPropertiesOk returns a tuple with the CustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetCustomPropertiesOk() (*map[string]MetadataValue, bool) {
	if o == nil || IsNil(o.CustomProperties) {
		return nil, false
	}
	return o.CustomProperties, true
}

// HasCustomProperties returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasCustomProperties() bool {
	if o != nil && !IsNil(o.CustomProperties) {
		return true
	}

	return false
}

// SetCustomProperties gets a reference to the given map[string]MetadataValue and assigns it to the CustomProperties field.
func (o *InferenceServiceUpdate) SetCustomProperties(v map[string]MetadataValue) {
	o.CustomProperties = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InferenceServiceUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetExternalID returns the ExternalID field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetExternalID() string {
	if o == nil || IsNil(o.ExternalID) {
		var ret string
		return ret
	}
	return *o.ExternalID
}

// GetExternalIDOk returns a tuple with the ExternalID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetExternalIDOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalID) {
		return nil, false
	}
	return o.ExternalID, true
}

// HasExternalID returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasExternalID() bool {
	if o != nil && !IsNil(o.ExternalID) {
		return true
	}

	return false
}

// SetExternalID gets a reference to the given string and assigns it to the ExternalID field.
func (o *InferenceServiceUpdate) SetExternalID(v string) {
	o.ExternalID = &v
}

// GetModelVersionId returns the ModelVersionId field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetModelVersionId() string {
	if o == nil || IsNil(o.ModelVersionId) {
		var ret string
		return ret
	}
	return *o.ModelVersionId
}

// GetModelVersionIdOk returns a tuple with the ModelVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetModelVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ModelVersionId) {
		return nil, false
	}
	return o.ModelVersionId, true
}

// HasModelVersionId returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasModelVersionId() bool {
	if o != nil && !IsNil(o.ModelVersionId) {
		return true
	}

	return false
}

// SetModelVersionId gets a reference to the given string and assigns it to the ModelVersionId field.
func (o *InferenceServiceUpdate) SetModelVersionId(v string) {
	o.ModelVersionId = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetRuntime() string {
	if o == nil || IsNil(o.Runtime) {
		var ret string
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given string and assigns it to the Runtime field.
func (o *InferenceServiceUpdate) SetRuntime(v string) {
	o.Runtime = &v
}

// GetDesiredState returns the DesiredState field value if set, zero value otherwise.
func (o *InferenceServiceUpdate) GetDesiredState() InferenceServiceState {
	if o == nil || IsNil(o.DesiredState) {
		var ret InferenceServiceState
		return ret
	}
	return *o.DesiredState
}

// GetDesiredStateOk returns a tuple with the DesiredState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InferenceServiceUpdate) GetDesiredStateOk() (*InferenceServiceState, bool) {
	if o == nil || IsNil(o.DesiredState) {
		return nil, false
	}
	return o.DesiredState, true
}

// HasDesiredState returns a boolean if a field has been set.
func (o *InferenceServiceUpdate) HasDesiredState() bool {
	if o != nil && !IsNil(o.DesiredState) {
		return true
	}

	return false
}

// SetDesiredState gets a reference to the given InferenceServiceState and assigns it to the DesiredState field.
func (o *InferenceServiceUpdate) SetDesiredState(v InferenceServiceState) {
	o.DesiredState = &v
}

func (o InferenceServiceUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InferenceServiceUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomProperties) {
		toSerialize["customProperties"] = o.CustomProperties
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalID) {
		toSerialize["externalID"] = o.ExternalID
	}
	if !IsNil(o.ModelVersionId) {
		toSerialize["modelVersionId"] = o.ModelVersionId
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if !IsNil(o.DesiredState) {
		toSerialize["desiredState"] = o.DesiredState
	}
	return toSerialize, nil
}

type NullableInferenceServiceUpdate struct {
	value *InferenceServiceUpdate
	isSet bool
}

func (v NullableInferenceServiceUpdate) Get() *InferenceServiceUpdate {
	return v.value
}

func (v *NullableInferenceServiceUpdate) Set(val *InferenceServiceUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableInferenceServiceUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableInferenceServiceUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInferenceServiceUpdate(val *InferenceServiceUpdate) *NullableInferenceServiceUpdate {
	return &NullableInferenceServiceUpdate{value: val, isSet: true}
}

func (v NullableInferenceServiceUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInferenceServiceUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Model Registry REST API

REST API for Model Registry to create and manage ML model metadata

API version: v1alpha3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CatalogModelArtifact type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CatalogModelArtifact{}

// CatalogModelArtifact struct for CatalogModelArtifact
type CatalogModelArtifact struct {
	// Creation time in milliseconds since epoch.
	CreateTimeSinceEpoch *int32 `json:"createTimeSinceEpoch,omitempty"`
	// The protocol used to access the artifact (only `oci` for now).
	Protocol *string `json:"protocol,omitempty"`
	// List of tags for the artifact. These are for information only. It is recommended that this list only include immutable tags (e.g. `1.2.3` instead of ephemeral/floating tags such as `1`, `1.2`, or `latest`).
	Tags []string `json:"tags,omitempty"`
	// Artifact URI.
	Uri *string `json:"uri,omitempty"`
}

// NewCatalogModelArtifact instantiates a new CatalogModelArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogModelArtifact() *CatalogModelArtifact {
	this := CatalogModelArtifact{}
	return &this
}

// NewCatalogModelArtifactWithDefaults instantiates a new CatalogModelArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogModelArtifactWithDefaults() *CatalogModelArtifact {
	this := CatalogModelArtifact{}
	return &this
}

// GetCreateTimeSinceEpoch returns the CreateTimeSinceEpoch field value if set, zero value otherwise.
func (o *CatalogModelArtifact) GetCreateTimeSinceEpoch() int32 {
	if o == nil || IsNil(o.CreateTimeSinceEpoch) {
		var ret int32
		return ret
	}
	return *o.CreateTimeSinceEpoch
}

// GetCreateTimeSinceEpochOk returns a tuple with the CreateTimeSinceEpoch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogModelArtifact) GetCreateTimeSinceEpochOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateTimeSinceEpoch) {
		return nil, false
	}
	return o.CreateTimeSinceEpoch, true
}

// HasCreateTimeSinceEpoch returns a boolean if a field has been set.
func (o *CatalogModelArtifact) HasCreateTimeSinceEpoch() bool {
	if o != nil && !IsNil(o.CreateTimeSinceEpoch) {
		return true
	}

	return false
}

// SetCreateTimeSinceEpoch gets a reference to the given int32 and assigns it to the CreateTimeSinceEpoch field.
func (o *CatalogModelArtifact) SetCreateTimeSinceEpoch(v int32) {
	o.CreateTimeSinceEpoch = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *CatalogModelArtifact) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogModelArtifact) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *CatalogModelArtifact) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *CatalogModelArtifact) SetProtocol(v string) {
	o.Protocol = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CatalogModelArtifact) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogModelArtifact) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CatalogModelArtifact) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CatalogModelArtifact) SetTags(v []string) {
	o.Tags = v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *CatalogModelArtifact) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogModelArtifact) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *CatalogModelArtifact) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *CatalogModelArtifact) SetUri(v string) {
	o.Uri = &v
}

func (o CatalogModelArtifact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CatalogModelArtifact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTimeSinceEpoch) {
		toSerialize["createTimeSinceEpoch"] = o.CreateTimeSinceEpoch
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableCatalogModelArtifact struct {
	value *CatalogModelArtifact
	isSet bool
}

func (v NullableCatalogModelArtifact) Get() *CatalogModelArtifact {
	return v.value
}

func (v *NullableCatalogModelArtifact) Set(val *CatalogModelArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogModelArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogModelArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogModelArtifact(val *CatalogModelArtifact) *NullableCatalogModelArtifact {
	return &NullableCatalogModelArtifact{value: val, isSet: true}
}

func (v NullableCatalogModelArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogModelArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

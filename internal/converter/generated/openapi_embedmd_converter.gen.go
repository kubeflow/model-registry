// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package generated

import (
	"fmt"
	converter "github.com/kubeflow/model-registry/internal/converter"
	models "github.com/kubeflow/model-registry/internal/db/models"
	openapi "github.com/kubeflow/model-registry/pkg/openapi"
)

type OpenAPIToEmbedMDConverterImpl struct{}

func (c *OpenAPIToEmbedMDConverterImpl) ConvertDocArtifact(source *converter.OpenAPIModelWrapper[openapi.DocArtifact]) (*models.BaseEntity[models.DocArtifactAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.DocArtifactAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.DocArtifactAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapDocArtifactTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsDocArtifactAttributes, err := converter.MapDocArtifactAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsDocArtifactAttributes
		pModelsPropertiesList, err := converter.MapDocArtifactPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertInferenceService(source *converter.OpenAPIModelWrapper[openapi.InferenceService]) (*models.BaseEntity[models.InferenceServiceAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.InferenceServiceAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.InferenceServiceAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapInferenceServiceTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsInferenceServiceAttributes, err := converter.MapInferenceServiceAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsInferenceServiceAttributes
		pModelsPropertiesList, err := converter.MapInferenceServicePropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertModelArtifact(source *converter.OpenAPIModelWrapper[openapi.ModelArtifact]) (*models.BaseEntity[models.ModelArtifactAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.ModelArtifactAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.ModelArtifactAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapModelArtifactTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsModelArtifactAttributes, err := converter.MapModelArtifactAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsModelArtifactAttributes
		pModelsPropertiesList, err := converter.MapModelArtifactPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertModelVersion(source *converter.OpenAPIModelWrapper[openapi.ModelVersion]) (*models.BaseEntity[models.ModelVersionAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.ModelVersionAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.ModelVersionAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapModelVersionTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsModelVersionAttributes, err := converter.MapModelVersionAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsModelVersionAttributes
		pModelsPropertiesList, err := converter.MapModelVersionPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertRegisteredModel(source *converter.OpenAPIModelWrapper[openapi.RegisteredModel]) (*models.BaseEntity[models.RegisteredModelAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.RegisteredModelAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.RegisteredModelAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapRegisteredModelTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsRegisteredModelAttributes, err := converter.MapRegisteredModelAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsRegisteredModelAttributes
		pModelsPropertiesList, err := converter.MapRegisteredModelPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertServeModel(source *converter.OpenAPIModelWrapper[openapi.ServeModel]) (*models.BaseEntity[models.ServeModelAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.ServeModelAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.ServeModelAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapServeModelTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsServeModelAttributes, err := converter.MapServeModelAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsServeModelAttributes
		pModelsPropertiesList, err := converter.MapServeModelPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}
func (c *OpenAPIToEmbedMDConverterImpl) ConvertServingEnvironment(source *converter.OpenAPIModelWrapper[openapi.ServingEnvironment]) (*models.BaseEntity[models.ServingEnvironmentAttributes], error) {
	var pModelsBaseEntity *models.BaseEntity[models.ServingEnvironmentAttributes]
	if source != nil {
		var modelsBaseEntity models.BaseEntity[models.ServingEnvironmentAttributes]
		var pString *string
		if (*source).Model != nil {
			pString = (*source).Model.Id
		}
		if pString != nil {
			xint32, err := converter.StringToInt32(*pString)
			if err != nil {
				return nil, fmt.Errorf("error setting field ID: %w", err)
			}
			modelsBaseEntity.ID = &xint32
		}
		pInt32, err := converter.MapServingEnvironmentTypeIDEmbedMD(source)
		if err != nil {
			return nil, fmt.Errorf("error setting field TypeID: %w", err)
		}
		modelsBaseEntity.TypeID = pInt32
		pModelsServingEnvironmentAttributes, err := converter.MapServingEnvironmentAttributesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Attributes: %w", err)
		}
		modelsBaseEntity.Attributes = pModelsServingEnvironmentAttributes
		pModelsPropertiesList, err := converter.MapServingEnvironmentPropertiesEmbedMD((*source).Model)
		if err != nil {
			return nil, fmt.Errorf("error setting field Properties: %w", err)
		}
		modelsBaseEntity.Properties = pModelsPropertiesList
		var pMapStringOpenapiMetadataValue *map[string]openapi.MetadataValue
		if (*source).Model != nil {
			pMapStringOpenapiMetadataValue = (*source).Model.CustomProperties
		}
		pModelsPropertiesList2, err := converter.MapOpenAPICustomPropertiesEmbedMD(pMapStringOpenapiMetadataValue)
		if err != nil {
			return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
		}
		modelsBaseEntity.CustomProperties = pModelsPropertiesList2
		pModelsBaseEntity = &modelsBaseEntity
	}
	return pModelsBaseEntity, nil
}

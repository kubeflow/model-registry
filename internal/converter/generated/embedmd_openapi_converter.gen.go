// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package generated

import (
	"fmt"
	converter "github.com/kubeflow/model-registry/internal/converter"
	models "github.com/kubeflow/model-registry/internal/db/models"
	openapi "github.com/kubeflow/model-registry/pkg/openapi"
)

type EmbedMDToOpenAPIConverterImpl struct{}

func (c *EmbedMDToOpenAPIConverterImpl) ConvertDataSet(source *models.BaseEntity[models.DataSetAttributes]) (*openapi.DataSet, error) {
	var pOpenapiDataSet *openapi.DataSet
	if source != nil {
		var openapiDataSet openapi.DataSet
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiDataSet.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiDataSet.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiDataSet.ExternalId = converter.MapEmbedMDExternalIDDataSet((*source).Attributes)
		openapiDataSet.Name = converter.MapEmbedMDNameDataSet((*source).Attributes)
		openapiDataSet.Id = converter.Int32ToString((*source).ID)
		openapiDataSet.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochDataSet((*source).Attributes)
		openapiDataSet.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochDataSet((*source).Attributes)
		openapiDataSet.ArtifactType = converter.MapEmbedMDArtifactTypeDataSet((*source).Attributes)
		openapiDataSet.Digest = converter.MapEmbedMDPropertyDigest((*source).Properties)
		openapiDataSet.SourceType = converter.MapEmbedMDPropertySourceType((*source).Properties)
		openapiDataSet.Source = converter.MapEmbedMDPropertySource((*source).Properties)
		openapiDataSet.Schema = converter.MapEmbedMDPropertySchema((*source).Properties)
		openapiDataSet.Profile = converter.MapEmbedMDPropertyProfile((*source).Properties)
		openapiDataSet.Uri = converter.MapEmbedMDURIDataSet((*source).Attributes)
		pOpenapiArtifactState, err := converter.MapEmbedMDStateDataSet((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiDataSet.State = pOpenapiArtifactState
		pOpenapiDataSet = &openapiDataSet
	}
	return pOpenapiDataSet, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertDocArtifact(source *models.BaseEntity[models.DocArtifactAttributes]) (*openapi.DocArtifact, error) {
	var pOpenapiDocArtifact *openapi.DocArtifact
	if source != nil {
		var openapiDocArtifact openapi.DocArtifact
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiDocArtifact.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiDocArtifact.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiDocArtifact.ExternalId = converter.MapEmbedMDExternalIDDocArtifact((*source).Attributes)
		openapiDocArtifact.Name = converter.MapEmbedMDNameDocArtifact((*source).Attributes)
		openapiDocArtifact.Id = converter.Int32ToString((*source).ID)
		openapiDocArtifact.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochDocArtifact((*source).Attributes)
		openapiDocArtifact.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochDocArtifact((*source).Attributes)
		openapiDocArtifact.ArtifactType = converter.MapEmbedMDArtifactTypeDocArtifact((*source).Attributes)
		openapiDocArtifact.Uri = converter.MapEmbedMDURIDocArtifact((*source).Attributes)
		pOpenapiArtifactState, err := converter.MapEmbedMDStateDocArtifact((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiDocArtifact.State = pOpenapiArtifactState
		pOpenapiDocArtifact = &openapiDocArtifact
	}
	return pOpenapiDocArtifact, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertExperiment(source *models.BaseEntity[models.ExperimentAttributes]) (*openapi.Experiment, error) {
	var pOpenapiExperiment *openapi.Experiment
	if source != nil {
		var openapiExperiment openapi.Experiment
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiExperiment.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiExperiment.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiExperiment.ExternalId = converter.MapEmbedMDExternalIDExperiment((*source).Attributes)
		openapiExperiment.Name = converter.MapEmbedMDNameExperiment((*source).Attributes)
		openapiExperiment.Id = converter.Int32ToString((*source).ID)
		openapiExperiment.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochExperiment((*source).Attributes)
		openapiExperiment.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochExperiment((*source).Attributes)
		openapiExperiment.Owner = converter.MapEmbedMDOwner((*source).Properties)
		pOpenapiExperimentState, err := converter.MapEmbedMDStateExperiment((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiExperiment.State = pOpenapiExperimentState
		pOpenapiExperiment = &openapiExperiment
	}
	return pOpenapiExperiment, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertExperimentRun(source *models.BaseEntity[models.ExperimentRunAttributes]) (*openapi.ExperimentRun, error) {
	var pOpenapiExperimentRun *openapi.ExperimentRun
	if source != nil {
		var openapiExperimentRun openapi.ExperimentRun
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiExperimentRun.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiExperimentRun.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiExperimentRun.ExternalId = converter.MapEmbedMDExternalIDExperimentRun((*source).Attributes)
		openapiExperimentRun.Name = converter.MapEmbedMDNameExperimentRun((*source).Attributes)
		openapiExperimentRun.EndTimeSinceEpoch = converter.MapEmbedMDPropertyEndTimeSinceEpochExperimentRun((*source).Properties)
		pOpenapiExperimentRunStatus, err := converter.MapEmbedMDPropertyStatusExperimentRun((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field Status: %w", err)
		}
		openapiExperimentRun.Status = pOpenapiExperimentRunStatus
		pOpenapiExperimentRunState, err := converter.MapEmbedMDStateExperimentRun((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiExperimentRun.State = pOpenapiExperimentRunState
		openapiExperimentRun.Owner = converter.MapEmbedMDOwner((*source).Properties)
		xstring, err := converter.MapEmbedMDPropertyExperimentIdExperimentRun((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field ExperimentId: %w", err)
		}
		openapiExperimentRun.ExperimentId = xstring
		openapiExperimentRun.StartTimeSinceEpoch = converter.MapEmbedMDPropertyStartTimeSinceEpochExperimentRun((*source).Properties)
		openapiExperimentRun.Id = converter.Int32ToString((*source).ID)
		openapiExperimentRun.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochExperimentRun((*source).Attributes)
		openapiExperimentRun.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochExperimentRun((*source).Attributes)
		pOpenapiExperimentRun = &openapiExperimentRun
	}
	return pOpenapiExperimentRun, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertInferenceService(source *models.BaseEntity[models.InferenceServiceAttributes]) (*openapi.InferenceService, error) {
	var pOpenapiInferenceService *openapi.InferenceService
	if source != nil {
		var openapiInferenceService openapi.InferenceService
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiInferenceService.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiInferenceService.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiInferenceService.ExternalId = converter.MapEmbedMDExternalIDInferenceService((*source).Attributes)
		openapiInferenceService.Name = converter.MapEmbedMDNameInferenceService((*source).Attributes)
		openapiInferenceService.Id = converter.Int32ToString((*source).ID)
		openapiInferenceService.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochInferenceService((*source).Attributes)
		openapiInferenceService.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochInferenceService((*source).Attributes)
		openapiInferenceService.ModelVersionId = converter.MapEmbedMDPropertyModelVersionId((*source).Properties)
		openapiInferenceService.Runtime = converter.MapEmbedMDPropertyRuntime((*source).Properties)
		pOpenapiInferenceServiceState, err := converter.MapEmbedMDPropertyDesiredStateInferenceService((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field DesiredState: %w", err)
		}
		openapiInferenceService.DesiredState = pOpenapiInferenceServiceState
		openapiInferenceService.RegisteredModelId = converter.MapEmbedMDPropertyRegisteredModelId((*source).Properties)
		openapiInferenceService.ServingEnvironmentId = converter.MapEmbedMDPropertyServingEnvironmentId((*source).Properties)
		pOpenapiInferenceService = &openapiInferenceService
	}
	return pOpenapiInferenceService, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertMetric(source *models.BaseEntity[models.MetricAttributes]) (*openapi.Metric, error) {
	var pOpenapiMetric *openapi.Metric
	if source != nil {
		var openapiMetric openapi.Metric
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiMetric.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiMetric.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiMetric.ExternalId = converter.MapEmbedMDExternalIDMetric((*source).Attributes)
		openapiMetric.Name = converter.MapEmbedMDNameMetric((*source).Attributes)
		openapiMetric.Id = converter.Int32ToString((*source).ID)
		openapiMetric.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochMetric((*source).Attributes)
		openapiMetric.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochMetric((*source).Attributes)
		openapiMetric.ArtifactType = converter.MapEmbedMDArtifactTypeMetric((*source).Attributes)
		openapiMetric.Value = converter.MapEmbedMDPropertyValueMetric((*source).Properties)
		openapiMetric.Timestamp = converter.MapEmbedMDPropertyTimestampMetric((*source).Properties)
		openapiMetric.Step = converter.MapEmbedMDPropertyStepMetric((*source).Properties)
		pOpenapiArtifactState, err := converter.MapEmbedMDStateMetric((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiMetric.State = pOpenapiArtifactState
		pOpenapiMetric = &openapiMetric
	}
	return pOpenapiMetric, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertModelArtifact(source *models.BaseEntity[models.ModelArtifactAttributes]) (*openapi.ModelArtifact, error) {
	var pOpenapiModelArtifact *openapi.ModelArtifact
	if source != nil {
		var openapiModelArtifact openapi.ModelArtifact
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiModelArtifact.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiModelArtifact.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiModelArtifact.ExternalId = converter.MapEmbedMDExternalIDModelArtifact((*source).Attributes)
		openapiModelArtifact.Name = converter.MapEmbedMDNameModelArtifact((*source).Attributes)
		openapiModelArtifact.Id = converter.Int32ToString((*source).ID)
		openapiModelArtifact.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochModelArtifact((*source).Attributes)
		openapiModelArtifact.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochModelArtifact((*source).Attributes)
		openapiModelArtifact.ArtifactType = converter.MapEmbedMDArtifactTypeModelArtifact((*source).Attributes)
		openapiModelArtifact.ModelFormatName = converter.MapEmbedMDPropertyModelFormatName((*source).Properties)
		openapiModelArtifact.StorageKey = converter.MapEmbedMDPropertyStorageKey((*source).Properties)
		openapiModelArtifact.StoragePath = converter.MapEmbedMDPropertyStoragePath((*source).Properties)
		openapiModelArtifact.ModelFormatVersion = converter.MapEmbedMDPropertyModelFormatVersion((*source).Properties)
		openapiModelArtifact.ServiceAccountName = converter.MapEmbedMDPropertyServiceAccountName((*source).Properties)
		openapiModelArtifact.ModelSourceKind = converter.MapEmbedMDPropertyModelSourceKind((*source).Properties)
		openapiModelArtifact.ModelSourceClass = converter.MapEmbedMDPropertyModelSourceClass((*source).Properties)
		openapiModelArtifact.ModelSourceGroup = converter.MapEmbedMDPropertyModelSourceGroup((*source).Properties)
		openapiModelArtifact.ModelSourceId = converter.MapEmbedMDPropertyModelSourceId((*source).Properties)
		openapiModelArtifact.ModelSourceName = converter.MapEmbedMDPropertyModelSourceName((*source).Properties)
		openapiModelArtifact.Uri = converter.MapEmbedMDURIModelArtifact((*source).Attributes)
		pOpenapiArtifactState, err := converter.MapEmbedMDStateModelArtifact((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiModelArtifact.State = pOpenapiArtifactState
		pOpenapiModelArtifact = &openapiModelArtifact
	}
	return pOpenapiModelArtifact, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertModelVersion(source *models.BaseEntity[models.ModelVersionAttributes]) (*openapi.ModelVersion, error) {
	var pOpenapiModelVersion *openapi.ModelVersion
	if source != nil {
		var openapiModelVersion openapi.ModelVersion
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiModelVersion.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiModelVersion.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiModelVersion.ExternalId = converter.MapEmbedMDExternalIDModelVersion((*source).Attributes)
		openapiModelVersion.Name = converter.MapEmbedMDNameModelVersion((*source).Attributes)
		pOpenapiModelVersionState, err := converter.MapEmbedMDStateModelVersion((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiModelVersion.State = pOpenapiModelVersionState
		openapiModelVersion.Author = converter.MapEmbedMDAuthor((*source).Properties)
		openapiModelVersion.RegisteredModelId = converter.MapEmbedMDPropertyRegisteredModelId((*source).Properties)
		openapiModelVersion.Id = converter.Int32ToString((*source).ID)
		openapiModelVersion.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochModelVersion((*source).Attributes)
		openapiModelVersion.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochModelVersion((*source).Attributes)
		pOpenapiModelVersion = &openapiModelVersion
	}
	return pOpenapiModelVersion, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertParameter(source *models.BaseEntity[models.ParameterAttributes]) (*openapi.Parameter, error) {
	var pOpenapiParameter *openapi.Parameter
	if source != nil {
		var openapiParameter openapi.Parameter
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiParameter.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiParameter.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiParameter.ExternalId = converter.MapEmbedMDExternalIDParameter((*source).Attributes)
		openapiParameter.Name = converter.MapEmbedMDNameParameter((*source).Attributes)
		openapiParameter.Id = converter.Int32ToString((*source).ID)
		openapiParameter.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochParameter((*source).Attributes)
		openapiParameter.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochParameter((*source).Attributes)
		openapiParameter.ArtifactType = converter.MapEmbedMDArtifactTypeParameter((*source).Attributes)
		openapiParameter.Value = converter.MapEmbedMDPropertyValueParameter((*source).Properties)
		pOpenapiParameterType, err := converter.MapEmbedMDPropertyParameterTypeParameter((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field ParameterType: %w", err)
		}
		openapiParameter.ParameterType = pOpenapiParameterType
		pOpenapiArtifactState, err := converter.MapEmbedMDStateParameter((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiParameter.State = pOpenapiArtifactState
		pOpenapiParameter = &openapiParameter
	}
	return pOpenapiParameter, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertRegisteredModel(source *models.BaseEntity[models.RegisteredModelAttributes]) (*openapi.RegisteredModel, error) {
	var pOpenapiRegisteredModel *openapi.RegisteredModel
	if source != nil {
		var openapiRegisteredModel openapi.RegisteredModel
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiRegisteredModel.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiRegisteredModel.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiRegisteredModel.ExternalId = converter.MapEmbedMDExternalIDRegisteredModel((*source).Attributes)
		openapiRegisteredModel.Name = converter.MapEmbedMDNameRegisteredModel((*source).Attributes)
		openapiRegisteredModel.Id = converter.Int32ToString((*source).ID)
		openapiRegisteredModel.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochRegisteredModel((*source).Attributes)
		openapiRegisteredModel.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochRegisteredModel((*source).Attributes)
		openapiRegisteredModel.Readme = converter.MapEmbedMDPropertyReadme((*source).Properties)
		openapiRegisteredModel.Maturity = converter.MapEmbedMDPropertyMaturity((*source).Properties)
		openapiRegisteredModel.Language = converter.MapEmbedMDPropertyLanguage((*source).Properties)
		openapiRegisteredModel.Tasks = converter.MapEmbedMDPropertyTasks((*source).Properties)
		openapiRegisteredModel.Provider = converter.MapEmbedMDPropertyProvider((*source).Properties)
		openapiRegisteredModel.Logo = converter.MapEmbedMDPropertyLogo((*source).Properties)
		openapiRegisteredModel.License = converter.MapEmbedMDPropertyLicense((*source).Properties)
		openapiRegisteredModel.LicenseLink = converter.MapEmbedMDPropertyLicenseLink((*source).Properties)
		openapiRegisteredModel.LibraryName = converter.MapEmbedMDPropertyLibraryName((*source).Properties)
		openapiRegisteredModel.Owner = converter.MapEmbedMDOwner((*source).Properties)
		pOpenapiRegisteredModelState, err := converter.MapEmbedMDStateRegisteredModel((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field State: %w", err)
		}
		openapiRegisteredModel.State = pOpenapiRegisteredModelState
		pOpenapiRegisteredModel = &openapiRegisteredModel
	}
	return pOpenapiRegisteredModel, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertServeModel(source *models.BaseEntity[models.ServeModelAttributes]) (*openapi.ServeModel, error) {
	var pOpenapiServeModel *openapi.ServeModel
	if source != nil {
		var openapiServeModel openapi.ServeModel
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiServeModel.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiServeModel.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiServeModel.ExternalId = converter.MapEmbedMDExternalIDServeModel((*source).Attributes)
		openapiServeModel.Name = converter.MapEmbedMDNameServeModel((*source).Attributes)
		openapiServeModel.Id = converter.Int32ToString((*source).ID)
		openapiServeModel.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochServeModel((*source).Attributes)
		openapiServeModel.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochServeModel((*source).Attributes)
		pOpenapiExecutionState, err := converter.MapEmbedMDLastKnownStateServeModel((*source).Attributes)
		if err != nil {
			return nil, fmt.Errorf("error setting field LastKnownState: %w", err)
		}
		openapiServeModel.LastKnownState = pOpenapiExecutionState
		xstring, err := converter.MapEmbedMDPropertyModelVersionIdServeModel((*source).Properties)
		if err != nil {
			return nil, fmt.Errorf("error setting field ModelVersionId: %w", err)
		}
		openapiServeModel.ModelVersionId = xstring
		pOpenapiServeModel = &openapiServeModel
	}
	return pOpenapiServeModel, nil
}
func (c *EmbedMDToOpenAPIConverterImpl) ConvertServingEnvironment(source *models.BaseEntity[models.ServingEnvironmentAttributes]) (*openapi.ServingEnvironment, error) {
	var pOpenapiServingEnvironment *openapi.ServingEnvironment
	if source != nil {
		var openapiServingEnvironment openapi.ServingEnvironment
		if (*source).CustomProperties != nil {
			mapStringOpenapiMetadataValue, err := converter.MapEmbedMDCustomProperties((*(*source).CustomProperties))
			if err != nil {
				return nil, fmt.Errorf("error setting field CustomProperties: %w", err)
			}
			openapiServingEnvironment.CustomProperties = &mapStringOpenapiMetadataValue
		}
		openapiServingEnvironment.Description = converter.MapEmbedMDDescription((*source).Properties)
		openapiServingEnvironment.ExternalId = converter.MapEmbedMDExternalIDServingEnvironment((*source).Attributes)
		openapiServingEnvironment.Name = converter.MapEmbedMDNameServingEnvironment((*source).Attributes)
		openapiServingEnvironment.Id = converter.Int32ToString((*source).ID)
		openapiServingEnvironment.CreateTimeSinceEpoch = converter.MapEmbedMDCreateTimeSinceEpochServingEnvironment((*source).Attributes)
		openapiServingEnvironment.LastUpdateTimeSinceEpoch = converter.MapEmbedMDLastUpdateTimeSinceEpochServingEnvironment((*source).Attributes)
		pOpenapiServingEnvironment = &openapiServingEnvironment
	}
	return pOpenapiServingEnvironment, nil
}

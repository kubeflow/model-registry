"""Model Registry REST API.

REST API for Model Registry to create and manage ML model metadata

The version of the OpenAPI document: v1alpha3
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

import unittest

from mr_openapi.api.model_registry_service_api import ModelRegistryServiceApi


class TestModelRegistryServiceApi(unittest.TestCase):
    """ModelRegistryServiceApi unit test stubs."""

    def setUp(self) -> None:
        self.api = ModelRegistryServiceApi()

    def tearDown(self) -> None:
        pass

    def test_create_environment_inference_service(self) -> None:
        """Test case for create_environment_inference_service.

        Create a InferenceService in ServingEnvironment
        """
        pass

    def test_create_inference_service(self) -> None:
        """Test case for create_inference_service.

        Create a InferenceService
        """
        pass

    def test_create_inference_service_serve(self) -> None:
        """Test case for create_inference_service_serve.

        Create a ServeModel action in a InferenceService
        """
        pass

    def test_create_model_artifact(self) -> None:
        """Test case for create_model_artifact.

        Create a ModelArtifact
        """
        pass

    def test_create_model_version(self) -> None:
        """Test case for create_model_version.

        Create a ModelVersion
        """
        pass

    def test_create_model_version_artifact(self) -> None:
        """Test case for create_model_version_artifact.

        Create an Artifact in a ModelVersion
        """
        pass

    def test_create_registered_model(self) -> None:
        """Test case for create_registered_model.

        Create a RegisteredModel
        """
        pass

    def test_create_registered_model_version(self) -> None:
        """Test case for create_registered_model_version.

        Create a ModelVersion in RegisteredModel
        """
        pass

    def test_create_serving_environment(self) -> None:
        """Test case for create_serving_environment.

        Create a ServingEnvironment
        """
        pass

    def test_find_inference_service(self) -> None:
        """Test case for find_inference_service.

        Get an InferenceServices that matches search parameters.
        """
        pass

    def test_find_model_artifact(self) -> None:
        """Test case for find_model_artifact.

        Get a ModelArtifact that matches search parameters.
        """
        pass

    def test_find_model_version(self) -> None:
        """Test case for find_model_version.

        Get a ModelVersion that matches search parameters.
        """
        pass

    def test_find_registered_model(self) -> None:
        """Test case for find_registered_model.

        Get a RegisteredModel that matches search parameters.
        """
        pass

    def test_find_serving_environment(self) -> None:
        """Test case for find_serving_environment.

        Find ServingEnvironment
        """
        pass

    def test_get_environment_inference_services(self) -> None:
        """Test case for get_environment_inference_services.

        List All ServingEnvironment's InferenceServices
        """
        pass

    def test_get_inference_service(self) -> None:
        """Test case for get_inference_service.

        Get a InferenceService
        """
        pass

    def test_get_inference_service_model(self) -> None:
        """Test case for get_inference_service_model.

        Get InferenceService's RegisteredModel
        """
        pass

    def test_get_inference_service_serves(self) -> None:
        """Test case for get_inference_service_serves.

        List All InferenceService's ServeModel actions
        """
        pass

    def test_get_inference_service_version(self) -> None:
        """Test case for get_inference_service_version.

        Get InferenceService's ModelVersion
        """
        pass

    def test_get_inference_services(self) -> None:
        """Test case for get_inference_services.

        List All InferenceServices
        """
        pass

    def test_get_model_artifact(self) -> None:
        """Test case for get_model_artifact.

        Get a ModelArtifact
        """
        pass

    def test_get_model_artifacts(self) -> None:
        """Test case for get_model_artifacts.

        List All ModelArtifacts
        """
        pass

    def test_get_model_version(self) -> None:
        """Test case for get_model_version.

        Get a ModelVersion
        """
        pass

    def test_get_model_version_artifacts(self) -> None:
        """Test case for get_model_version_artifacts.

        List all artifacts associated with the `ModelVersion`
        """
        pass

    def test_get_model_versions(self) -> None:
        """Test case for get_model_versions.

        List All ModelVersions
        """
        pass

    def test_get_registered_model(self) -> None:
        """Test case for get_registered_model.

        Get a RegisteredModel
        """
        pass

    def test_get_registered_model_versions(self) -> None:
        """Test case for get_registered_model_versions.

        List All RegisteredModel's ModelVersions
        """
        pass

    def test_get_registered_models(self) -> None:
        """Test case for get_registered_models.

        List All RegisteredModels
        """
        pass

    def test_get_serving_environment(self) -> None:
        """Test case for get_serving_environment.

        Get a ServingEnvironment
        """
        pass

    def test_get_serving_environments(self) -> None:
        """Test case for get_serving_environments.

        List All ServingEnvironments
        """
        pass

    def test_update_inference_service(self) -> None:
        """Test case for update_inference_service.

        Update a InferenceService
        """
        pass

    def test_update_model_artifact(self) -> None:
        """Test case for update_model_artifact.

        Update a ModelArtifact
        """
        pass

    def test_update_model_version(self) -> None:
        """Test case for update_model_version.

        Update a ModelVersion
        """
        pass

    def test_update_registered_model(self) -> None:
        """Test case for update_registered_model.

        Update a RegisteredModel
        """
        pass

    def test_update_serving_environment(self) -> None:
        """Test case for update_serving_environment.

        Update a ServingEnvironment
        """
        pass


if __name__ == "__main__":
    unittest.main()

[tool.poetry]
name = "model-registry"
version = "0.2.11"
description = "Client for Kubeflow Model Registry"
authors = ["Isabella Basso do Amaral <idoamara@redhat.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/kubeflow/model-registry"
packages = [
    { include = "model_registry", from = "src" },
    { include = "mr_openapi", from = "src" },
]

[tool.poetry.urls]
"Issues" = "https://github.com/kubeflow/model-registry/issues"

[tool.poetry.dependencies]
python = ">= 3.9, < 4.0"
typing-extensions = "^4.8"
pydantic = "^2.7.4"
python-dateutil = "^2.9.0.post0"
aiohttp = "^3.9.5"
aiohttp-retry = "^2.8.3"
# allows for reentrant event loops (used for sync client)
nest-asyncio = "^1.6.0"
# necessary for modern type annotations using pydantic on 3.9
eval-type-backport = "^0.2.0"

huggingface-hub = { version = ">=0.20.1,<0.27.0", optional = true }

[tool.poetry.extras]
hf = ["huggingface-hub"]

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
furo = ">=2023.9.10,<2025.0.0"
myst-parser = { extras = ["linkify"], version = ">=2,<4" }
sphinx-autobuild = ">=2021.3.14,<2025.0.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.2,<9.0.0"
coverage = { extras = ["toml"], version = "^7.3.2" }
pytest-cov = ">=4.1,<7.0"
ruff = ">=0.5.2,<0.9.0"
mypy = "^1.7.0"
pytest-asyncio = ">=0.23.7,<0.25.0"
requests = "^2.32.2"
black = "^24.4.2"
types-python-dateutil = "^2.9.0.20240906"

[tool.coverage.run]
branch = true
source = ["model_registry"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.report]
show_missing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = ["e2e: end-to-end testing"]

[tool.ruff]
target-version = "py39"
respect-gitignore = true

[tool.ruff.lint]
select = [
    "F", # pyflakes
    # pycodestyle
    "W", # warnings
    "E", # errors

    "C90", # mccabe
    "B",   # bugbear
    "S",   # flake8-bandit

    "C4",  # flake8-comprehensions
    "D",   # pydocstyle
    "EM",  # flake8-errmsg
    "I",   # isort
    "PT",  # pytest
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
]
ignore = [
    "D105", # missing docstring in magic method
    "E501", # line too long
    "S101", # use of assert detected
]
mccabe.max-complexity = 8
per-file-ignores = { "tests/**/*.py" = [
    "D", # missing docstring in public module
] }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.9"
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

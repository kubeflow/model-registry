/* eslint-disable camelcase */
import {
  CatalogPerformanceMetricsArtifact,
  CatalogArtifactType,
  MetricsType,
} from '~/app/modelCatalogTypes';
import { ModelRegistryMetadataType } from '~/app/types';

const createPerformanceMetricsArtifact = (
  id: string,
  hardware: string,
  hardwareCount: number,
  rpsPerReplica: number,
  ttftMean: number,
  ttftP90: number,
  ttftP95: number,
  ttftP99: number,
  e2eMean: number,
  e2eP90: number,
  e2eP95: number,
  e2eP99: number,
  tpsMean: number,
  tpsP90: number,
  tpsP95: number,
  tpsP99: number,
  itlMean: number,
  itlP90: number,
  itlP95: number,
  itlP99: number,
  maxInputTokens: number,
  maxOutputTokens: number,
  meanInputTokens: number,
  meanOutputTokens: number,
  frameworkVersion: string,
): CatalogPerformanceMetricsArtifact => ({
  artifactType: CatalogArtifactType.metricsArtifact,
  metricsType: MetricsType.performanceMetrics,
  createTimeSinceEpoch: '1739210683000',
  lastUpdateTimeSinceEpoch: '1739210683000',
  customProperties: {
    config_id: {
      metadataType: ModelRegistryMetadataType.STRING,
      string_value: id,
    },
    hardware: {
      metadataType: ModelRegistryMetadataType.STRING,
      string_value: hardware,
    },
    hardware_count: {
      metadataType: ModelRegistryMetadataType.INT,
      int_value: hardwareCount.toString(),
    },
    requests_per_second: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: rpsPerReplica,
    },
    ttft_mean: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: ttftMean,
    },
    ttft_p90: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: ttftP90,
    },
    ttft_p95: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: ttftP95,
    },
    ttft_p99: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: ttftP99,
    },
    e2e_mean: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: e2eMean,
    },
    e2e_p90: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: e2eP90,
    },
    e2e_p95: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: e2eP95,
    },
    e2e_p99: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: e2eP99,
    },
    tps_mean: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: tpsMean,
    },
    tps_p90: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: tpsP90,
    },
    tps_p95: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: tpsP95,
    },
    tps_p99: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: tpsP99,
    },
    itl_mean: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: itlMean,
    },
    itl_p90: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: itlP90,
    },
    itl_p95: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: itlP95,
    },
    itl_p99: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: itlP99,
    },
    max_input_tokens: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: maxInputTokens,
    },
    max_output_tokens: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: maxOutputTokens,
    },
    mean_input_tokens: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: meanInputTokens,
    },
    mean_output_tokens: {
      metadataType: ModelRegistryMetadataType.DOUBLE,
      double_value: meanOutputTokens,
    },
    framework: {
      metadataType: ModelRegistryMetadataType.STRING,
      string_value: 'vllm',
    },
    framework_version: {
      metadataType: ModelRegistryMetadataType.STRING,
      string_value: frameworkVersion,
    },
  },
});

export const mockPerformanceMetricsArtifacts: CatalogPerformanceMetricsArtifact[] = [
  createPerformanceMetricsArtifact(
    '1',
    'A100-80',
    1,
    2,
    24,
    25,
    27,
    28,
    1240,
    1242,
    1248,
    1249,
    124,
    24,
    25,
    27,
    24,
    24,
    24,
    24,
    1024,
    1,
    512,
    256,
    'v0.8.4',
  ),
  createPerformanceMetricsArtifact(
    '2',
    'H100',
    1,
    3,
    18,
    19,
    21,
    22,
    1180,
    1185,
    1190,
    1195,
    98,
    18,
    19,
    21,
    18,
    18,
    18,
    18,
    2048,
    2,
    1024,
    512,
    'v0.9.1',
  ),
  createPerformanceMetricsArtifact(
    '3',
    'A100-40',
    2,
    4,
    32,
    35,
    38,
    42,
    1320,
    1330,
    1340,
    1350,
    156,
    32,
    35,
    38,
    32,
    32,
    32,
    32,
    4096,
    4,
    2048,
    1024,
    'v0.7.2',
  ),
  createPerformanceMetricsArtifact(
    '4',
    'H200',
    2,
    5,
    15,
    16,
    18,
    20,
    1100,
    1110,
    1120,
    1130,
    88,
    15,
    16,
    18,
    15,
    15,
    15,
    15,
    8192,
    8,
    4096,
    2048,
    'v0.9.5',
  ),
  createPerformanceMetricsArtifact(
    '5',
    'A100-80',
    2,
    3,
    28,
    30,
    33,
    36,
    1280,
    1290,
    1300,
    1310,
    142,
    28,
    30,
    33,
    28,
    28,
    28,
    28,
    3072,
    3,
    1536,
    768,
    'v0.8.7',
  ),
  createPerformanceMetricsArtifact(
    '6',
    'A100-40',
    4,
    6,
    12,
    13,
    14,
    16,
    1050,
    1060,
    1070,
    1080,
    75,
    12,
    13,
    14,
    12,
    12,
    12,
    12,
    6144,
    6,
    3072,
    1536,
    'v0.6.9',
  ),
];

name: Test Fuzz on Comment
on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  checks: write  # Required to create/update checks

env:
  IMG_REGISTRY: ghcr.io
  IMG_ORG: kubeflow
  IMG_REPO: model-registry/server
  IMG_VERSION: cicd
  PUSH_IMAGE: false

jobs:
  test-fuzz:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/test-fuzz')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clients/python
    steps:
      - name: Get PR details
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            return {
              sha: pr.data.head.sha,
              ref: pr.data.head.ref
            };

      - name: Create Check Run
        id: create-check
        uses: actions/github-script@v7
        with:
          script: |
            const result = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'test-fuzz',
              head_sha: '${{ fromJson(steps.pr.outputs.result).sha }}',
              status: 'in_progress',
              started_at: new Date().toISOString(),
              output: {
                title: 'Fuzz Test',
                summary: 'Running fuzz tests for the pull request'
              }
            });
            return result.data.id;

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ fromJson(steps.pr.outputs.result).sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Remove AppArmor profile for mysql in KinD on GHA
        run: |
          set -x
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Run Fuzz Tests
        id: run-tests
        run: |
          echo "Starting fuzz tests..."
          make test-fuzz

      - name: Update Check Run on Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: '${{ steps.create-check.outputs.result }}',
              status: 'completed',
              conclusion: 'success',
              completed_at: new Date().toISOString(),
              output: {
                title: 'Fuzz Test',
                summary: 'Fuzz tests completed successfully'
              }
            });

      - name: Update Check Run on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: '${{ steps.create-check.outputs.result }}',
              status: 'completed',
              conclusion: 'failure',
              completed_at: new Date().toISOString(),
              output: {
                title: 'Fuzz Test',
                summary: 'Fuzz tests failed'
              }
            });

name: Test async-upload Job
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "LICENSE*"
      - "**.gitignore"
      - "**.md"
      - "**.txt"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/dependabot.yml"
      - "docs/**"
  pull_request:
    paths:
      - "jobs/async-upload/**"
      - ".github/workflows/**"

permissions:
  contents: read

env:
  # Async Job
  JOB_IMG_REGISTRY: ghcr.io
  JOB_IMG_ORG: kubeflow
  JOB_IMG_NAME: model-registry/job/async-upload
  JOB_IMG_VERSION: cicd
  # MR Server
  IMG_REGISTRY: ghcr.io
  IMG_ORG: kubeflow
  IMG_REPO: model-registry/server
  IMG_VERSION: cicd
  PUSH_IMAGE: false

jobs:
  py-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: jobs/async-upload
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # refers to the Container image
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Install dependencies
        run: |
          make install
      - name: Run tests
        run: |
          make test
      - name: Remove AppArmor profile for mysql in KinD on GHA # https://github.com/kubeflow/manifests/issues/2507
        run: |
          set -x
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
      - name: Run E2E tests
        run: |
          make test-e2e
  job-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: jobs/async-upload
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11" # refers to the Container image
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Remove AppArmor profile for mysql in KinD on GHA # https://github.com/kubeflow/manifests/issues/2507
        run: |
          set -x
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
      - name: Execute Sample Job E2E test
        run: |
          make test-integration
  check-autogen:
    name: Check generated code or files are in sync
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: jobs/async-upload
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Install dependencies
        run: |
          make install
      - name: Check if there are uncommitted file changes
        run: |
          clean=$(git status --porcelain)
          if [[ -z "$clean" ]]; then
              echo "Empty git status --porcelain: $clean"
          else
              echo "Uncommitted file changes detected: $clean"
              git diff
              exit 1
          fi

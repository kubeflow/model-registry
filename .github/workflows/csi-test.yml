name: Test CSI
on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "LICENSE*"
      - "**.gitignore"
      - "**.md"
      - "**.txt"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/dependabot.yml"
      - "docs/**"
  pull_request:
    paths:
      - "cmd/csi/**"
      - "internal/csi/**"
      - "internal/server/openapi/api_model_registry_service*"
      - "pkg/openapi/**"
      # csi build depends on base go.mod https://github.com/kubeflow/model-registry/issues/311
      - "go.mod"

env:
  IMG_REGISTRY: ghcr.io
  IMG_ORG: kubeflow
  MODEL_REGISTRY_IMG: model-registry/server
  MODEL_REGISTRY_CSI_IMG: model-registry/storage-initializer
  PUSH_IMAGE: false
  BRANCH: ${{ github.base_ref }}
jobs:
  build-and-test-csi-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate tag
        shell: bash
        id: tags
        run: |
          commit_sha=${{ github.event.after }}
          tag=main-${commit_sha:0:7}
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Install network tools
        run: sudo apt-get update && sudo apt-get install -y netcat-openbsd

      - name: Build local model registry image
        shell: bash
        env:
          IMG_REPO: ${{ env.MODEL_REGISTRY_IMG }}
          VERSION: ${{ steps.tags.outputs.tag }}
          PUSH_IMAGE: false
        run: ./scripts/build_deploy.sh

      - name: Build local custom storage initializer
        shell: bash
        env:
          IMG_REPO: ${{ env.MODEL_REGISTRY_CSI_IMG }}
          IMG_VERSION: ${{ steps.tags.outputs.tag }}
        run: make image/build

      - name: Start KinD cluster
        uses: helm/kind-action@v1.12.0
        with:
          node_image: "kindest/node:v1.27.11"

      - name: Remove AppArmor profile for mysql in KinD on GHA # https://github.com/kubeflow/manifests/issues/2507
        run: |
          set -x
          sudo apt-get install apparmor-profiles
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

      - name: Install kustomize
        run: ./test/scripts/install_kustomize.sh

      - name: Run tests
        shell: bash
        env:
          MR_IMG: "${{ env.IMG_REGISTRY }}/${{ env.IMG_ORG }}/${{ env.MODEL_REGISTRY_IMG }}:${{ steps.tags.outputs.tag }}"
          MR_CSI_IMG: "${{ env.IMG_REGISTRY }}/${{ env.IMG_ORG }}/${{ env.MODEL_REGISTRY_CSI_IMG }}:${{ steps.tags.outputs.tag }}"
          CLUSTER: chart-testing
        run: ./test/csi/e2e_test.sh

# Example ConfigMap for create_model intent
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-metadata-configmap
data:
  # RegisteredModel metadata
  RegisteredModel.name: "my-new-model"
  RegisteredModel.description: |
    This is a new machine learning model for sentiment analysis.
    It was trained on a large corpus of text data.
  RegisteredModel.owner: "data-science-team"
  RegisteredModel.custom_properties: |
    {
      "project": "sentiment-analysis-v2",
      "team": "nlp-research",
      "cost_center": "engineering"
    }

  # ModelVersion metadata
  ModelVersion.name: "1.0.0"
  ModelVersion.description: "Initial production release"
  ModelVersion.author: "Jane Smith"
  ModelVersion.custom_properties: |
    {
      "training_dataset": "sentiment-corpus-v1.2",
      "accuracy": 0.95,
      "f1_score": 0.93
    }

  # ModelArtifact metadata
  ModelArtifact.name: "sentiment-analyzer"
  ModelArtifact.model_format_name: "tensorflow"
  ModelArtifact.model_format_version: "2.8"
  ModelArtifact.storage_key: "s3-connection"
  ModelArtifact.storage_path: "models/sentiment/"
  ModelArtifact.service_account_name: "model-registry-sa"
  ModelArtifact.model_source_kind: "HuggingFace"
  ModelArtifact.model_source_class: "transformer"
  ModelArtifact.model_source_group: "bert-models"
  ModelArtifact.model_source_id: "bert-base-uncased"
  ModelArtifact.model_source_name: "BERT Base Uncased"
  ModelArtifact.custom_properties: |
    {
      "model_size_mb": 438,
      "inference_time_ms": 120,
      "supported_languages": ["en", "es", "fr"]
    }
---
# Job definition using create_model intent
apiVersion: batch/v1
kind: Job
metadata:
  name: create-model-job
spec:
  template:
    spec:
      containers:
      - name: model-sync
        image: model-registry/async-upload:latest
        env:
        # Intent specification
        - name: MODEL_SYNC_MODEL_UPLOAD_INTENT
          value: "create_model"

        # ConfigMap metadata path
        - name: MODEL_SYNC_METADATA_CONFIGMAP_PATH
          value: "/etc/model-metadata"

        # Source configuration (e.g., S3)
        - name: MODEL_SYNC_SOURCE_TYPE
          value: "s3"
        - name: MODEL_SYNC_SOURCE_AWS_BUCKET
          value: "my-models-bucket"
        - name: MODEL_SYNC_SOURCE_AWS_KEY
          value: "models/sentiment-analyzer/v1.0.0/"

        # Destination configuration (e.g., OCI)
        - name: MODEL_SYNC_DESTINATION_TYPE
          value: "oci"
        - name: MODEL_SYNC_DESTINATION_OCI_REGISTRY
          value: "registry.example.com"
        - name: MODEL_SYNC_DESTINATION_OCI_URI
          value: "registry.example.com/models/sentiment-analyzer:1.0.0"

        # Model Registry configuration
        - name: MODEL_SYNC_REGISTRY_SERVER_ADDRESS
          value: "model-registry-service.default.svc.cluster.local"
        - name: MODEL_SYNC_REGISTRY_PORT
          value: "8080"
        - name: MODEL_SYNC_REGISTRY_IS_SECURE
          value: "false"
        - name: MODEL_SYNC_REGISTRY_AUTHOR
          value: "data-science-team"

        volumeMounts:
        - name: model-metadata
          mountPath: /etc/model-metadata
          readOnly: true
        - name: s3-credentials
          mountPath: /etc/s3-credentials
          readOnly: true
        - name: oci-credentials
          mountPath: /etc/oci-credentials
          readOnly: true

      volumes:
      - name: model-metadata
        configMap:
          name: model-metadata-configmap
      - name: s3-credentials
        secret:
          secretName: s3-credentials-secret
      - name: oci-credentials
        secret:
          secretName: oci-credentials-secret

      restartPolicy: OnFailure